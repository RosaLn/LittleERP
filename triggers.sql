create or replace TRIGGER TRIGGER_USERS
BEFORE INSERT OR UPDATE
ON ERP_USERS
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','ERP_USERS','INSERTADO USUARIO '||:NEW.IDUSER,SYSDATE);

	ELSIF UPDATING('DELETED') THEN
		INSERT INTO LOGS VALUES(1,'D','ERP_USERS','ELIMINADO USUARIO '||:NEW.IDUSER,SYSDATE);
		
	ELSIF UPDATING THEN
		INSERT INTO LOGS VALUES(1,'U','ERP_USERS','MODIFICADO USUARIO '||:NEW.IDUSER,SYSDATE);

	END IF;
END;
/


create or replace TRIGGER TRIGGER_CUSTOMERS
BEFORE INSERT OR UPDATE
ON CUSTOMERS
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','CUSTOMERS','INSERTADO CLIENTE '||:NEW.IDCUSTOMER,SYSDATE);

	ELSIF UPDATING('DELETED') THEN
		INSERT INTO LOGS VALUES(1,'D','CUSTOMERS','ELIMINADO CLIENTE '||:NEW.IDCUSTOMER,SYSDATE);
		
	ELSIF UPDATING THEN
		INSERT INTO LOGS VALUES(1,'U','CUSTOMERS','MODIFICADO CLIENTE '||:NEW.IDCUSTOMER,SYSDATE);

	END IF;
END;
/

create or replace TRIGGER TRIGGER_ORDERS
BEFORE INSERT OR UPDATE
ON ORDERS
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','ORDERS','INSERTADO PEDIDO '||:NEW.IDORDER,SYSDATE);

	ELSIF UPDATING('DELETED') THEN
		INSERT INTO LOGS VALUES(1,'D','ORDERS','ELIMINADO PEDIDO '||:NEW.IDORDER,SYSDATE);
		
	ELSIF UPDATING THEN
		INSERT INTO LOGS VALUES(1,'U','ORDERS','MODIFICADO PEDIDO '||:NEW.IDORDER,SYSDATE);

	END IF;
END;
/

create or replace TRIGGER TRIGGER_PAY
BEFORE INSERT OR UPDATE
ON PAYMENTMETHODS
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','PAYMENTMETHODS','INSERTADO MÉTODO DE PAGO '||:NEW.IDPAYMENTMETHOD,SYSDATE);

	ELSIF UPDATING('DELETED') THEN
		INSERT INTO LOGS VALUES(1,'D','PAYMENTMETHODS','ELIMINADO MÉTODO DE PAGO '||:NEW.IDPAYMENTMETHOD,SYSDATE);
		
	ELSIF UPDATING THEN
		INSERT INTO LOGS VALUES(1,'U','PAYMENTMETHODS','MODIFICADO MÉTODO DE PAGO '||:NEW.IDPAYMENTMETHOD,SYSDATE);

	END IF;
END;
/

create or replace TRIGGER TRIGGER_PRODUCTS
BEFORE INSERT OR UPDATE
ON PRODUCTS
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','PRODUCTS','INSERTADO PRODUCTO '||:NEW.IDPRODUCT,SYSDATE);

	ELSIF UPDATING('DELETED') THEN
		INSERT INTO LOGS VALUES(1,'D','PRODUCTS','ELIMINADO PRODUCTO '||:NEW.IDPRODUCT,SYSDATE);
		
	ELSIF UPDATING THEN
		INSERT INTO LOGS VALUES(1,'U','PRODUCTS','MODIFICADO PRODUCTO '||:NEW.IDPRODUCT,SYSDATE);

	END IF;
END;
/

create or replace TRIGGER TRIGGER_ROLES
BEFORE INSERT
ON ROLES
FOR EACH ROW
BEGIN

	IF INSERTING THEN
		INSERT INTO LOGS VALUES(1,'I','ROLES','INSERTADO ROL '||:NEW.ID_ROL,SYSDATE);
	END IF;
END;
/

